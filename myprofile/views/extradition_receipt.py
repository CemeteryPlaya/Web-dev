from django.contrib.auth.decorators import login_required
from django.shortcuts import render, redirect
from django.contrib import messages
from django.db.models import Count, Q
from django.db.models import F
from myprofile.models import ExtraditionReceipt, Receipt, ReceiptItem, TrackCode, Notification


@login_required(login_url='login')
def extradition_receipt_view(request):
    """
    –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤—ã–¥–∞—á–∏ –ø–æ —á–µ–∫—É:
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —á–µ–∫–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –í–°–ï —Ç—Ä–µ–∫-–∫–æ–¥—ã –∏–º–µ—é—Ç —Å—Ç–∞—Ç—É—Å 'ready'.
    """
    if request.method == 'POST':
        receipt_id = request.POST.get('receipt_id')
        pickup_point = request.POST.get('pickup_point', '').strip()
        comment = request.POST.get('comment', '').strip()

        if not receipt_id or not pickup_point:
            messages.error(request, "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —á–µ–∫ –∏ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏.")
            return redirect('extradition_receipt')

        try:
            receipt = Receipt.objects.get(id=receipt_id)
        except Receipt.DoesNotExist:
            messages.error(request, "‚ùå –ß–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return redirect('extradition_receipt')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–¥–∞–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —á–µ–∫
        if hasattr(receipt, 'extradition_receipt'):
            messages.warning(request, f"‚ùó –ß–µ–∫ #{receipt.id} —É–∂–µ –≤—ã–¥–∞–Ω —Ä–∞–Ω–µ–µ.")
            return redirect('extradition_receipt')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —Ç—Ä–µ–∫–∏ –∏–º–µ—é—Ç —Å—Ç–∞—Ç—É—Å 'ready'
        items = ReceiptItem.objects.filter(receipt=receipt)
        if not items.exists():
            messages.error(request, f"‚ùå –£ —á–µ–∫–∞ #{receipt.id} –Ω–µ—Ç —Ç—Ä–µ–∫-–∫–æ–¥–æ–≤.")
            return redirect('extradition_receipt')

        not_ready = items.exclude(track_code__status='ready').count()
        if not_ready > 0:
            messages.warning(request, f"‚ö†Ô∏è –£ —á–µ–∫–∞ #{receipt.id} –µ—Å—Ç—å —Ç—Ä–µ–∫-–∫–æ–¥—ã, –Ω–µ –≥–æ—Ç–æ–≤—ã–µ –∫ –≤—ã–¥–∞—á–µ.")
            return redirect('extradition_receipt')

        # –°–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ
        extradition = ExtraditionReceipt.objects.create(
            receipt=receipt,
            issued_by=request.user,
            pickup_point=pickup_point,
            comment=comment
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã —Ç—Ä–µ–∫–æ–≤ ‚Üí 'claimed'
        for item in items:
            track = item.track_code
            track.status = 'claimed'
            track.save()

            # –°–æ–∑–¥–∞—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
            Notification.objects.create(
                user=track.owner,
                message=f"üì¶ –¢—Ä–µ–∫ {track.track_code} –≤—ã–¥–∞–Ω –≤ –ø—É–Ω–∫—Ç–µ: {pickup_point}"
            )

        messages.success(request, f"‚úÖ –ß–µ–∫ #{receipt.id} —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω ({items.count()} —Ç—Ä–µ–∫–æ–≤).")
        return redirect('extradition_receipt')

    # ---- GET-–∑–∞–ø—Ä–æ—Å: –≤—ã–±–∏—Ä–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–µ–∫–∏ ----
    # –¢–æ–ª—å–∫–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ, –Ω–µ–≤—ã–¥–∞–Ω–Ω—ã–µ, –∏ –≤—Å–µ —Ç—Ä–µ–∫-–∫–æ–¥—ã = ready
    available_receipts = (
        Receipt.objects.filter(is_paid=True, extradition_receipt__isnull=True)
        .annotate(
            total_tracks=Count('items'),
            ready_tracks=Count('items', filter=Q(items__track_code__status='ready'))
        )
        .filter(total_tracks=F('ready_tracks'))  # –≤—Å–µ —Ç—Ä–µ–∫–∏ –≥–æ—Ç–æ–≤—ã
    )

    extraditions = ExtraditionReceipt.objects.select_related('receipt', 'issued_by')

    return render(request, 'extradition_receipt.html', {
        'receipts': available_receipts,
        'extraditions': extraditions
    })
